//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Nlog2")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0")]
[assembly: System.Reflection.AssemblyProductAttribute("Nlog2")]
[assembly: System.Reflection.AssemblyTitleAttribute("Nlog2")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

namespace MovieApp.Controllers

{

    public class HomeController : Controller

    {

        //

        // GET: /Home/ 

        public ActionResult Index()

        {

            return View();

        } 

        //

        // GET: /Home/Details/5 

        public ActionResult Details(int id)

        {

            return View();

        } 

        //

        // GET: /Home/Create 

        public ActionResult Create()

        {

            return View();

        }  

        //

        // POST: /Home/Create 

        [AcceptVerbs(HttpVerbs.Post)]

        public ActionResult Create(FormCollection collection)

        {

            try

            {

                // TODO: Add insert logic here 

                return RedirectToAction("Index");

            }

            catch

            {

                return View();

            }

        } 

        //

        // GET: /Home/Edit/5

        public ActionResult Edit(int id)

        {

            return View();

        } 

        //

        // POST: /Home/Edit/5 

        [AcceptVerbs(HttpVerbs.Post)]

        public ActionResult Edit(int id, FormCollection collection)

        {

            try

            {

                // TODO: Add update logic here

                return RedirectToAction("Index");

            }

            catch

            {

                return View();

            }

        }

    }
namespace MovieApp.Controllers

{

    public class HomeController : Controller

    {

        private MoviesDBEntities _db = new MoviesDBEntities(); 

        public ActionResult Index()

        {

            return View(_db.MoviesDBEntities.ToList());

        }

    }

}

 public class Startup
{
public Startup(IConfiguration configuration)
{
Configuration = configuration;
}

public IConfiguration Configuration { get; }

// Use this method to add services to the container.
public void ConfigureServices(IServiceCollection services)
{
services.AddRouting(options => {
options.LowercaseUrls = true;
options.AppendTrailingSlash = true;
});

services.AddControllersWithViews();

services.AddDbContext<MovieContext>(options =>
options.UseSqlServer(Configuration.GetConnectionString("MovieContext")));
}

// Use this method to configure the HTTP request pipeline.
public void Configure(IApplicationBuilder app)
{
app.UseDeveloperExceptionPage();
app.UseHttpsRedirection();
app.UseStaticFiles();

app.UseRouting();
app.UseEndpoints(endpoints =>
{
endpoints.MapControllerRoute(
name: "default",
pattern: "{controller=Home}/{action=Index}/{id?}/{slug?}");
});
}
}
}

namespace MovieList.Models
{
public class MovieContext : DbContext
{
public MovieContext(DbContextOptions<MovieContext> options)
: base(options)
{ }

public DbSet<Movie> Movies { get; set; }
public DbSet<Genre> Genres { get; set; }

protected override void OnModelCreating(ModelBuilder modelBuilder)
{
modelBuilder.Entity<Movie>().HasData(
new Movie {
MovieId = 4,
Name = "Casablanca",
Year = 1943,
Rating = 5,
GenreId = "D"
},
new Movie {
MovieId = 2,
Name = "Wonder Woman",
Year = 2017,
Rating = 3,
GenreId = "A"
},
new Movie {
MovieId = 3,
Name = "Moonstruck",
Year = 1988,
Rating = 4,
GenreId = "R"
}
);
modelBuilder.Entity<Genre>().HasData(
new Genre { GenreId = "A", Name = "Action" },
new Genre { GenreId = "C", Name = "Comedy" },
new Genre { GenreId = "D", Name = "Drama" },
new Genre { GenreId = "H", Name = "Horror" },
new Genre { GenreId = "M", Name = "Musical" },
new Genre { GenreId = "R", Name = "RomCom" },
new Genre { GenreId = "S", Name = "SciFi" }
);
}
}
}

